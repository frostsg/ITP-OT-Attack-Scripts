from pymodbus.client.sync import ModbusTcpClient
from pymodbus.exceptions import ModbusException

# Function to read from Modbus registers
def read_registers(client, address, count):
    try:
        response = client.read_holding_registers(address, count, unit=1)
        if response.isError():
            print(f"Error reading registers at address {address}")
            return None
        return response.registers
    except ModbusException as e:
        print(f"Modbus error reading registers: {e}")
        return None

# Function to write to a Modbus register
def write_register(client, address, value):
    try:
        response = client.write_register(address, value, unit=1)
        if response.isError():
            print(f"Error writing to register at address {address}")
        else:
            print(f"Successfully wrote {value} to register {address}")
    except ModbusException as e:
        print(f"Modbus error writing to register: {e}")

def main():
    # Connect to the Modbus server
    client = ModbusTcpClient('localhost', port=5020)
    if not client.connect():
        print("Failed to connect to Modbus server")
        return

    # Read from registers 0, 1, 2, and 3
    registers = read_registers(client, 0, 4)
    if registers is not None:
        print(f"Read values from registers 0-3: {registers}")

    # Write a number to the 10th register
    write_register(client, 9, 330)  # Write the value 1234 to register 10 (register 9 in zero-based index)

    # Close the Modbus client connection
    client.close()

if __name__ == "__main__":
    main()
